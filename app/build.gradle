apply plugin: 'com.android.application'

android {
    //编译时的sdkVersion，这个是编译时的版本，是你代码中使用的sdkVersion
    compileSdkVersion versions.compileSdkVersion
    //构建时的sdkVersion，这个是打包时所使用的sdkVersion
    buildToolsVersion versions.buildToolsVersion

    /**
     * 默认配置 包名 minSdk targetSdk etc
     */
    defaultConfig {
        applicationId "com.example.wdc.ms"
        minSdkVersion versions.minSdkVersion
        targetSdkVersion versions.targetSdkVersion
        versionCode versions.versionCode
        versionName versions.versionName
    }
    /**
     * 配置构建类型 一般分为debug 和 release
     */
    buildTypes {
        release {
            minifyEnabled true
            useProguard true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
//        debug {
//            minifyEnabled false
//            useProguard false
//            shrinkResources false
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//        }
    }

    /**
     * 如果你不使用android studio默认的配置路径的话
     * 在这里可以自己指定resource以及libs路径
     */
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
            res.srcDirs = ['src/main/res', 'src/main/res/anim']
        }
    }
    //使用dataBinding
    dataBinding {
        enabled = true
    }

}

/**
 * 在这里块里声明你依赖的module、library(包括远端和本地的)
 */
dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation 'junit:junit:4.12'

    //support
    implementation "com.android.support:appcompat-v7:${versions.supportLibrary}"
    implementation "com.android.support:cardview-v7:${versions.supportLibrary}"
    implementation "com.android.support:design:${versions.supportLibrary}"
    implementation "com.android.support:palette-v7:${versions.supportLibrary}"

    //liveData viewModel
    implementation "android.arch.lifecycle:extensions:${versions.lifecycle}"
    //ReactiveStreams support for LiveData
    implementation "android.arch.lifecycle:reactivestreams:1.1.0"


// viewModel
//    implementation "android.arch.lifecycle:viewmodel:${versions.lifecycle}"
//    implementation "android.arch.lifecycle:livedata:${versions.lifecycle}"

    //butterknife
    implementation "com.jakewharton:butterknife:${versions.butterknife}"
    annotationProcessor "com.jakewharton:butterknife-compiler:${versions.butterknife}"

    //glide,因为glide引用了最新的supportv4包 所以会和我们的supportLibrary有冲突，这里设置忽略glide的support
    implementation ("com.github.bumptech.glide:glide:${versions.glide}"){
        exclude group: "com.android.support"
    }
    annotationProcessor "com.github.bumptech.glide:compiler:${versions.glide}"

    //retrofit
    implementation "com.squareup.retrofit2:retrofit:${versions.retrofit}"
    implementation "com.squareup.retrofit2:converter-gson:${versions.retrofit}"
    implementation "com.squareup.retrofit2:adapter-rxjava2:${versions.retrofit}"

    //rx
    implementation "io.reactivex.rxjava2:rxjava:${versions.rxjava}"
    implementation "io.reactivex.rxjava2:rxandroid:${versions.rxandroid}"

    //okhttp
    implementation "com.squareup.okhttp3:okhttp:${versions.okhttp}"
    implementation "com.squareup.okhttp3:logging-interceptor:${versions.okhttp}"
    implementation "com.squareup.okio:okio:${versions.okio}"
    implementation "com.google.code.gson:gson:${versions.gson}"


}
